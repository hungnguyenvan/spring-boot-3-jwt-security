# Docker Optimization cho Raspberry Pi 5
# File: docker-compose-optimized.yml

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine  # Alpine = nhẹ hơn 60% so với ubuntu base
    container_name: postgres-jwt-optimized
    
    # Tối ưu resource limits cho Pi 5
    deploy:
      resources:
        limits:
          cpus: '1.0'      # Giới hạn 1 CPU core
          memory: 512M     # Giới hạn 512MB RAM
        reservations:
          cpus: '0.5'      # Đảm bảo tối thiểu 0.5 core
          memory: 256M     # Đảm bảo tối thiểu 256MB
    
    environment:
      POSTGRES_USER: hungcop
      POSTGRES_PASSWORD: hungcop290987
      POSTGRES_DB: jwt_security
      
      # Tối ưu PostgreSQL cho Pi 5
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      
    # Tối ưu PostgreSQL config
    command: >
      postgres
      -c shared_buffers=128MB
      -c effective_cache_size=256MB
      -c maintenance_work_mem=32MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c max_connections=50
      -c log_statement=none
      -c log_min_duration_statement=1000
    
    volumes:
      # Sử dụng named volume cho performance tốt nhất
      - postgres_data_optimized:/var/lib/postgresql/data
      - ./database_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      
    ports:
      - "5432:5432"
      
    networks:
      - jwt-network
      
    restart: unless-stopped
    
    # Health check tối ưu
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hungcop -d jwt_security"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Redis cho session/caching (optional nhưng giúp performance)
  redis:
    image: redis:7-alpine
    container_name: redis-jwt-optimized
    
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 32M
    
    command: >
      redis-server
      --maxmemory 100mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec
      --save 900 1
      --save 300 10
      --save 60 10000
      
    volumes:
      - redis_data_optimized:/data
      
    ports:
      - "6379:6379"
      
    networks:
      - jwt-network
      
    restart: unless-stopped

volumes:
  postgres_data_optimized:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/docker-data/postgres  # SSD mount point nếu có
      
  redis_data_optimized:
    driver: local

networks:
  jwt-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: jwt-br0
